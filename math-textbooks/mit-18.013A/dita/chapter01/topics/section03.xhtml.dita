<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "urn:pubid:dita4publishers.org:doctypes:dita:topic" "topic.dtd">
<topic id="d1e56"><title>1.3 Functions</title><body><p>
A
<b>Set</b>
is a primitive notion. We start with set (or another word for it:
<b>collection</b>
) as a basic notion.
</p><p>
An Ordered Countable Set is also called a
<b>sequence. </b>
1, 2, 3, ... is a sequence.
</p><p>
If it has two elements it is called an
<b>ordered pair.
<d4p_eqn_inline>
    <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mrow><m:mo stretchy="false">(</m:mo><m:mn>3</m:mn><m:mo>,</m:mo><m:mn>4</m:mn><m:mo stretchy="false">)</m:mo></m:mrow></m:math></mathml>
  </d4p_eqn_inline>
</b>
is such a pair.
</p><p>
A
<b>function</b>
is a collection of ordered pairs whose first elements are all different.
</p><p>
The first elements are called
<b>arguments</b>
the second
<b>values.</b>
</p><p>
The set of arguments is called its
<b>domain.</b>
</p><p>
The set of values is called its
<b>range.</b>
</p><p>
We describe each pair in the function 
<d4p_eqn_inline>
  <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>f</m:mi></m:math></mathml>
</d4p_eqn_inline>
 by 
<d4p_eqn_inline>
  <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mrow><m:mi>f</m:mi><m:mo stretchy="false">(</m:mo><m:mtext>argument</m:mtext><m:mo stretchy="false">)</m:mo><m:mo>=</m:mo><m:mtext>value</m:mtext></m:mrow></m:math></mathml>
</d4p_eqn_inline>
.
</p><p>

  <image href="images/function_domain.gif" width="380" height="235"><alt>figure</alt></image>

</p><p>
It is perfectly OK for 
<d4p_eqn_inline>
  <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>f</m:mi></m:math></mathml>
</d4p_eqn_inline>
 to have the same value for two different arguments: say for 
<d4p_eqn_inline>
  <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mrow><m:mi>f</m:mi><m:mo stretchy="false">(</m:mo><m:mi>d</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:math></mathml>
</d4p_eqn_inline>
 and 
<d4p_eqn_inline>
  <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mrow><m:mi>f</m:mi><m:mo stretchy="false">(</m:mo><m:mi>e</m:mi><m:mo stretchy="false">)</m:mo></m:mrow></m:math></mathml>
</d4p_eqn_inline>
 to be identical.
</p><p>
We can describe a function by listing its pairs, or by drawing a graph of representative pairs in the usual way: if 
<d4p_eqn_inline>
  <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mrow><m:mi>f</m:mi><m:mo stretchy="false">(</m:mo><m:mi>a</m:mi><m:mo stretchy="false">)</m:mo><m:mo>=</m:mo><m:mi>b</m:mi></m:mrow></m:math></mathml>
</d4p_eqn_inline>
<i> put a point at the intersection of the vertical line through
<d4p_eqn_inline>
    <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi></m:math></mathml>
  </d4p_eqn_inline> on the
<d4p_eqn_inline>
    <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>x</m:mi></m:math></mathml>
  </d4p_eqn_inline> axis and the horizontal line through
<d4p_eqn_inline>
    <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>b</m:mi></m:math></mathml>
  </d4p_eqn_inline> on the
<d4p_eqn_inline>
    <mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>y</m:mi></m:math></mathml>
  </d4p_eqn_inline> axis</i>
.
</p><p>
However we cannot list all the pairs in any function having an infinite or huge domain.
</p><p>
Instead we define such a function by giving a procedure you can use to construct its value for any argument you choose in its domain. This procedure is often called a "formula" for the function.
</p></body></topic>