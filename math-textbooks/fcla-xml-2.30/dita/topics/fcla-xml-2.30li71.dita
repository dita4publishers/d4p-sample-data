<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "urn:pubid:dita4publishers.org:doctypes:dita:topic" "topic.dtd">
<topic id="d1e30"><title>Section PT  Proof Techniques</title><body><p> From <xref href="http://linear.ups.edu/" scope="external" format="html"><ph outputclass="cmti-12">A First Course in Linear Algebra</ph></xref><br/>Version 2.30<br/><ph outputclass="cmsy-10x-x-120">©</ph> 2004.<br/>Licensed under the <xref href="http://www.gnu.org/licenses/fdl.html" scope="external" format="html">GNU Free Documentation License</xref>.<br/><xref href="http://linear.ups.edu/" scope="external" format="html"><ph outputclass="cmtt-12">http://linear.ups.edu/</ph></xref><br/><br/>  In this section we collect many short essays designed to help you understand
how to read, understand and construct proofs. Some are very factual, while others
consist of advice. They appear in the order that they are first needed (or
advisable) in the text, and are meant to be self-contained. So you should not
think of reading through this section in one sitting as you begin this course. But
be sure to head back here for a first reading whenever the text suggests
it. Also think about returning to browse at various points during the
course, and especially as you struggle with becoming an accomplished
mathematician who is comfortable with the difficult process of designing new
proofs.
</p></body><topic id="d1e62"><title>Proof Technique D: Definitions</title><body><p>  A definition is a made-up term, used as a kind of shortcut for some typically
more complicated idea. For example, we say a whole number is <ph outputclass="cmbx-12">even </ph>as a shortcut
for saying that when we divide the number by two we get a remainder of zero.
With a precise definition, we can answer certain questions unambiguously. For
example, did you ever wonder if zero was an even number? Now the answer should
be clear since we have a precise definition of what we mean by the term
even.
</p><p>   A single term might have several possible definitions.
                                                                          

                                                                          
For example, we could say that the whole number
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline> is even if there is
another whole number <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>k</m:mi></m:math></mathml></d4p_eqn_inline>
such that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>2</m:mn><m:mi>k</m:mi></m:math></mathml></d4p_eqn_inline>.
We say this is an equivalent definition since it categorizes even numbers the same
way our first definition does.
</p><p>   Definitions are like two-way streets — we can use a definition to replace
something rather complicated by its definition (if it fits) <ph outputclass="cmti-12">and </ph>we can replace a
definition by its more complicated description. A definition is usually written as
some form of an implication, such as “If something-nice-happens, then <ph outputclass="cmbx-12">blatzo</ph>.”
However, this also means that “If blatzo, then something-nice-happens,” even
though this may not be formally stated. This is what we mean when we say a
definition is a two-way street — it is really two implications, going in opposite
“directions.”
</p><p>   Anybody (including you) can make up a definition, so long as it is
unambiguous, but the real test of a definition’s utility is whether or not it is useful
for describing interesting or frequent situations.
</p><p>   We will talk about theorems later (and especially equivalences). For now, be
sure not to confuse the notion of a definition with that of a theorem.
</p><p>   In this book, we will display every new definition carefully set-off from the
text, and the term being defined will be written thus: <ph outputclass="cmbx-12">definition</ph>. Additionally,
there is a full list of all the definitions, in order of their appearance located at the
front of the book (<xref href="#definition">Definitions</xref>). Finally, the acronym for each definition can be
found in the index (<xref href="#index">Index</xref>). Definitions are critical to doing mathematics and
proving theorems, so we’ve given you lots of ways to locate a definition should you
forget its…uh, well, …definition.
</p><p>   Can you formulate a precise definition for what it means for a number to be
<ph outputclass="cmbx-12">odd</ph>? (Don’t just say it is the opposite of even. Act as if you don’t have a
definition for even yet.) Can you formulate your definition a second, equivalent,
way? Can you employ your definition to test an odd and an even number for
“odd-ness”?
</p></body></topic><topic id="d1e136"><title>Proof Technique T: Theorems</title><body><p>    Higher mathematics is about understanding theorems. Reading them,
understanding them, applying them, proving them. Every theorem is a shortcut
                                                                          

                                                                          
— we prove something in general, and then whenever we find a specific instance
covered by the theorem we can immediately say that we know something else
about the situation by applying the theorem. In many cases, this new
information can be gained with much less effort than if we did not know the
theorem.
</p><p>   The first step in understanding a theorem is to realize that the statement of every
theorem can be rewritten using statements of the form “If something-happens,
then something-else-happens.” The “something-happens” part is the <ph outputclass="cmbx-12">hypothesis</ph>
and the “something-else-happens” is the <ph outputclass="cmbx-12">conclusion</ph>. To understand a
theorem, it helps to rewrite its statement using this construction. To apply a
theorem, we verify that “something-happens” in a particular instance and
immediately conclude that “something-else-happens.” To prove a theorem, we
must argue based on the assumption that the hypothesis is true, and
arrive through the process of logic that the conclusion must then also be
true.
</p></body></topic><topic id="d1e159"><title>Proof Technique L: Language</title><body><p>Mathematics is a language. It is a way to express complicated ideas clearly, precisely,
and unambiguously. Because of this, it can be difficult to read. Read slowly, and
have pencil and paper at hand. It will usually be necessary to read something
several times. While reading can be difficult, it is even harder to speak
mathematics, and so that is the topic of this technique.
                                                                          

                                                                          
</p><p>   “Natural” language, in the present case English, is fraught with
ambiguity. Consider the possible meanings of the sentence: The fish is
ready to eat. One fish, or two fish? Are the fish hungry, or will the fish be
eaten? (See <xref keyref="fcla-xml-2.30li17/exercise.SSLE.M10">Exercise SSLE.M10</xref>, <xref keyref="fcla-xml-2.30li17/exercise.SSLE.M11">Exercise SSLE.M11</xref>, <xref keyref="fcla-xml-2.30li17/exercise.SSLE.M12">Exercise SSLE.M12</xref>,
<xref keyref="fcla-xml-2.30li17/exercise.SSLE.M13">Exercise SSLE.M13</xref>.) In your daily interactions with others, give some thought to
how many mis-understandings arise from the ambiguity of pronouns, modifiers
and objects.
</p><p>   I am going to suggest a simple modification to the way you use language that
will make it much, much easier to become proficient at speaking mathematics
and eventually it will become second nature. Think of it as a training
aid or practice drill you might use when learning to become skilled at a
sport.
</p><p>   First, eliminate pronouns from your vocabulary when discussing linear algebra,
in class or with your colleagues. Do not use: it, that, those, their or similar sources
of confusion. This is the single easiest step you can take to make your oral
expression of mathematics clearer to others, and in turn, it will greatly help your
own understanding.
</p><p>   Now rid yourself of the word “thing” (or variants like “something”). When you
are tempted to use this word realize that there is some object you want to
discuss, and we likely have a definition for that object (see the discussion at
<xref href="#technique.D">Technique D</xref>). Always “think about your objects” and many aspects of the study
of mathematics will get easier. Ask yourself: “Am I working with a set, a
number, a function, an operation, a differential equation, or what?” Knowing
what an object <ph outputclass="cmti-12">is </ph>will allow you to narrow down the procedures you may
apply to <ph outputclass="cmbx-12">it</ph>. If you have studied an object-oriented computer programming
language, then you will already have experience identifying objects and
thinking carefully about what procedures are allowed to be applied to
them.
</p><p>   Third, eliminate the verb “works” (as in “the equation works”) from your
vocabulary. This term is used as a substitute when we are not sure just what we
are trying to accomplish. Usually we are trying to say that some object fulfills
some condition. The condition might even have a definition associated with it,
making it even easier to describe.
</p><p>   Last, speak slooooowly and thoughtfully as you try to get by without all these
lazy words. It is hard at first, but you will get better with practice. Especially in
class, when the pressure is on and all eyes are on you, don’t succumb to the
temptation to use these weak words. Slow down, we’d all rather wait for a
slow, well-formed question or answer than a fast, sloppy, incomprehensible
                                                                          

                                                                          
one.
</p><p>   You will find the improvement in your ability to <ph outputclass="cmti-12">speak </ph>clearly about
complicated ideas will greatly improve your ability to <ph outputclass="cmti-12">think </ph>clearly about
complicated ideas. And I believe that you cannot think clearly about complicated
ideas if you cannot formulate questions or answers clearly in the correct language.
This is as applicable to the study of law, economics or philosophy as it is to the
study of science or mathematics.
</p><p>   In this spirit, <xref keyref="fcla-xml-2.30li6/HubertDupont">Dupont Hubert</xref> has contributed the following quotation, which
is widely used in French mathematics courses (and which might be construed as
the contrapositive of <xref href="#technique.CP">Technique CP</xref>)
     </p><p>which translates as
     </p><p>   So when you come to class, check your pronouns at the door, along with other
weak words. And when studying with friends, you might make a game of catching
one another using pronouns, “thing,” or “works.” I know I’ll be calling you on
it!
</p></body></topic><topic id="d1e270"><title>Proof Technique GS: Getting Started</title><body><p>    “I don’t know how to get started!” is often the lament of the novice
proof-builder. Here are a few pieces of advice.
     </p></body></topic><topic id="d1e377"><title>Proof Technique C: Constructive Proofs</title><body><p>  Conclusions of proofs come in a variety of types. Often a theorem will simply
<ph outputclass="cmti-12">assert </ph>that something exists. The best way, but not the only way, to show
something exists is to actually build it. Such a proof is called <ph outputclass="cmbx-12">constructive</ph>. The
thing to realize about constructive proofs is that the proof itself will contain a
                                                                          

                                                                          
procedure that might be used computationally to construct the desired object. If
the procedure is not too cumbersome, then the proof itself is as useful as the
statement of the theorem.
</p></body></topic><topic id="d1e396"><title>Proof Technique E: Equivalences</title><body><p>  When a theorem uses the phrase “if and only if” (or the abbreviation “iff”) it
is a shorthand way of saying that two if-then statements are true. So if a theorem
says “P if and only if Q,” then it is true that “if P, then Q” while it is also true
that “if Q, then P.” For example, it may be a theorem that “I wear bright yellow
knee-high plastic boots if and only if it is raining.” This means that I <ph outputclass="cmti-12">never </ph>forget
to wear my super-duper yellow boots when it is raining <ph outputclass="cmti-12">and </ph>I wouldn’t be seen in
such silly boots <ph outputclass="cmti-12">unless </ph>it was raining. You never have one without the other. I’ve
got my boots on and it is raining <ph outputclass="cmti-12">or </ph>I don’t have my boots on and it is
dry.
</p><p>   The upshot for proving such theorems is that it is like a 2-for-1 sale, we get to do <ph outputclass="cmti-12">two </ph>proofs.
Assume <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi></m:math></mathml></d4p_eqn_inline> and
conclude <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline>, then start
over and assume <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline>
and conclude <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi></m:math></mathml></d4p_eqn_inline>.
For this reason, “if and only if” is sometimes abbreviated by
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mspace width="3.26288pt" class="tmspace"/><m:mo class="MathClass-rel">⇔</m:mo><m:mspace width="3.26288pt" class="tmspace"/></m:math></mathml></d4p_eqn_inline>, while
proofs indicate which of the two implications is being proved by prefacing each
with <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mo class="MathClass-rel">⇒</m:mo></m:math></mathml></d4p_eqn_inline>
or <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mo class="MathClass-rel">⇐</m:mo></m:math></mathml></d4p_eqn_inline>. A
carefully written proof will remind the reader which statement is being used as
the hypothesis, a quicker version will let the reader deduce it from the direction of
the arrow. Tradition dictates we do the “easy” half first, but that’s hard for a
student to know until you’ve finished doing both halves! Oh well, if you rewrite
your proofs (a good habit), you can then choose to put the easy half
first.
</p><p>   Theorems of this type are called “equivalences” or “characterizations,” and
they are some of the most pleasing results in mathematics. They say that
two objects, or two situations, are really the same. You don’t have one
without the other, like rain and my yellow boots. The more different
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi></m:math></mathml></d4p_eqn_inline> and
                                                                          

                                                                          
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline> seem
to be, the more pleasing it is to discover they are really equivalent. And if
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi></m:math></mathml></d4p_eqn_inline>
describes a very mysterious solution or involves a tough computation, while
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline> is
transparent or involves easy computations, then we’ve found a great shortcut for
better understanding or faster computation. Remember that every theorem
really is a shortcut in some form. You will also discover that if proving
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline> is very easy,
then proving <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Q</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>P</m:mi></m:math></mathml></d4p_eqn_inline>
is likely to be proportionately harder. Sometimes the two halves are about equally
hard. And in rare cases, you can string together a whole sequence of other
equivalences to form the one you’re after and you don’t even need to do two
halves. In this case, the argument of one half is just the argument of the other
half, but in reverse.
</p><p>   One last thing about equivalences. If you see a statement of a theorem that
says two things are “equivalent,” translate it first into an “if and only if”
statement.
</p></body></topic><topic id="d1e512"><title>Proof Technique N: Negation</title><body><p>  When we construct the contrapositive of a theorem (<xref href="#technique.CP">Technique CP</xref>), we need
to negate the two statements in the implication. And when we construct a
proof by contradiction (<xref href="#technique.CD">Technique CD</xref>), we need to negate the conclusion
of the theorem. One way to construct a converse (<xref href="#technique.CV">Technique CV</xref>) is to
simultaneously negate the hypothesis and conclusion of an implication (but
remember that this is not guaranteed to be a true statement). So we often
have the need to negate statements, and in some situations it can be
tricky.
</p><p>   If a statement says that a set is empty, then its negation is the statement that the set
is nonempty. That’s straightforward. Suppose a statement says “something-happens”
for all <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>i</m:mi></m:math></mathml></d4p_eqn_inline>,
or every <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>i</m:mi></m:math></mathml></d4p_eqn_inline>,
or any <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>i</m:mi></m:math></mathml></d4p_eqn_inline>.
Then the negation is that “something-doesn’t-happen” for at least one value of
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>i</m:mi></m:math></mathml></d4p_eqn_inline>. If a
                                                                          

                                                                          
statement says that there exists at least one “thing,” then the negation is the
statement that there is no “thing.” If a statement says that a “thing” is
unique, then the negation is that there is zero, or more than one, of the
“thing.”
</p><p>   We are not covering all of the possibilities, but we wish to make the point that
logical qualifiers like “there exists” or “for every” must be handled with care when
negating statements. Studying the proofs which employ contradiction (as listed in
<xref href="#technique.CD">Technique CD</xref>) is a good first step towards understanding the range of
possibilities.
</p></body></topic><topic id="d1e565"><title>Proof Technique CP: Contrapositives</title><body><p>    The <ph outputclass="cmbx-12">contrapositive </ph>of an implication
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline> is the
implication <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mi>o</m:mi><m:mi>t</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>Q</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-rel">⇒</m:mo><m:mi>n</m:mi><m:mi>o</m:mi><m:mi>t</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>P</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>,
where “not” means the logical negation, or opposite. An implication
is true if and only if its contrapositive is true. In symbols,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>P</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>Q</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mspace width="3.26288pt" class="tmspace"/><m:mo class="MathClass-rel">⇔</m:mo><m:mspace width="3.26288pt" class="tmspace"/><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi><m:mi>o</m:mi><m:mi>t</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>Q</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-rel">⇒</m:mo><m:mi>n</m:mi><m:mi>o</m:mi><m:mi>t</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>P</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline> is a
theorem. Such statements about logic, that are always true, are known as
<ph outputclass="cmbx-12">tautologies</ph>.
</p><p>   For example, it is a theorem that “if a vehicle is a fire truck, then it has big
tires and has a siren.” (Yes, I’m sure you can conjure up a counterexample, but
play along with me anyway.) The contrapositive is “if a vehicle does not have big
tires or does not have a siren, then it is not a fire truck.” Notice how the
“and” became an “or” when we negated the conclusion of the original
theorem.
</p><p>   It will frequently happen that it is easier to construct a proof of the
contrapositive than of the original implication. If you are having difficulty
formulating a proof of some implication, see if the contrapositive is easier for you.
The trick is to construct the negation of complicated statements accurately. More
on that later.
</p></body></topic><topic id="d1e689"><title>Proof Technique CV: Converses</title><body><p>  The <ph outputclass="cmbx-12">converse </ph>of the implication <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>Q</m:mi></m:math></mathml></d4p_eqn_inline>
                                                                          

                                                                          
is the implication <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Q</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>P</m:mi></m:math></mathml></d4p_eqn_inline>.
There is no guarantee that the truth of these two statements are related. In
particular, if an implication has been proven to be a theorem, then do not try to
use its converse too, as if it were a theorem. Sometimes the converse is true (and
we have an equivalence, see <xref href="#technique.E">Technique E</xref>). But more likely the converse
is false, especially if it wasn’t included in the statement of the original
theorem.
</p><p>   For example, we have the theorem, “if a vehicle is a fire truck, then it is has
big tires and has a siren.” The converse is false. The statement that “if a vehicle
has big tires and a siren, then it is a fire truck” is false. A police vehicle for use on
a sandy public beach would have big tires and a siren, yet is not equipped to fight
fires.
</p><p>   We bring this up now, because <xref keyref="fcla-xml-2.30li19/theorem.CSRN">Theorem CSRN</xref> has a tempting converse. Does this theorem
say that if <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>r</m:mi><m:mo class="MathClass-rel">&lt;</m:mo><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline>,
then the system is consistent? Definitely not, as <xref keyref="fcla-xml-2.30li77/archetype.E">Archetype E</xref> has
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>r</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>3</m:mn><m:mo class="MathClass-rel">&lt;</m:mo><m:mn>4</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline>, yet
is inconsistent. This example is then said to be a <ph outputclass="cmbx-12">counterexample </ph>to the
converse. Whenever you think a theorem that is an implication might actually be
an equivalence, it is good to hunt around for a counterexample that shows the
converse to be false (the archetypes, <xref keyref="fcla-xml-2.30li72/appendix.A">Appendix A</xref>, can be a good hunting
ground).
</p></body></topic><topic id="d1e772"><title>Proof Technique CD: Contradiction</title><body><p>  Another proof technique is known as “proof by contradiction” and it can be a powerful
(and satisfying) approach. Simply put, suppose you wish to prove the implication, “If
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline>, then
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline>.” As usual, we
assume that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline>
is true, but we also make the additional assumption that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline> is
false. If our original implication is true, then these twin assumptions should
lead us to a logical inconsistency. In practice we assume the negation of
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline>
to be true (see <xref href="#technique.N">Technique N</xref>). So we argue from the assumptions
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline> and
                                                                          

                                                                          
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mtext> not</m:mtext><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>B</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
looking for some obviously false conclusion such as
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mn>6</m:mn></m:math></mathml></d4p_eqn_inline>, or a
set is simultaneously empty and nonempty, or a matrix is both nonsingular and
singular.
</p><p>   You should be careful about formulating proofs that look like proofs
by contradiction, but really aren’t. This happens when you assume
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline> and
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mtext> not</m:mtext><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>B</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
and proceed to give a “normal” and direct proof that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline> is true by only using
the assumption that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline>
is true. Your last step is to then claim that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline>
is true and you then appeal to the assumption that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mtext> not</m:mtext><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>B</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline> is
true, thus getting the desired contradiction. Instead, you could have avoided the
overhead of a proof by contradiction and just run with the direct proof. This
stylistic flaw is known, quite graphically, as “setting up the strawman to knock
him down.”
</p><p>   Here is a simple example of a proof by contradiction. There are direct proofs
that are just about as easy, but this will demonstrate the point, while narrowly
avoiding knocking down the straw man.
</p><p>   <ph outputclass="cmbx-12">Theorem</ph>: If <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi></m:math></mathml></d4p_eqn_inline>
and <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>b</m:mi></m:math></mathml></d4p_eqn_inline> are odd integers,
then their product, <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi><m:mi>b</m:mi></m:math></mathml></d4p_eqn_inline>,
is odd.
</p><p>   <ph outputclass="cmbx-12">Proof</ph>: To begin a proof by contradiction, assume the hypothesis, that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi></m:math></mathml></d4p_eqn_inline> and
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>b</m:mi></m:math></mathml></d4p_eqn_inline>
are odd. Also assume the negation of the conclusion, in this case, that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi><m:mi>b</m:mi></m:math></mathml></d4p_eqn_inline> is even. Then
there are integers, <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>j</m:mi></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>k</m:mi></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>ℓ</m:mi></m:math></mathml></d4p_eqn_inline> so
that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>2</m:mn><m:mi>j</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>b</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>2</m:mn><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>,
                                                                          

                                                                          
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi><m:mi>b</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>2</m:mn><m:mi>ℓ</m:mi></m:math></mathml></d4p_eqn_inline>.
Then
</p><equation-block><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block" overflow="scroll"><m:mtable columnalign="left" class="align-star"><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mn>0</m:mn></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mi>a</m:mi><m:mi>b</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mi>a</m:mi><m:mi>b</m:mi><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>2</m:mn><m:mi>j</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>2</m:mn><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-bin">−</m:mo><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>2</m:mn><m:mi>ℓ</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mn>4</m:mn><m:mi>j</m:mi><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mi>j</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mi>k</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>2</m:mn><m:mi>ℓ</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mn>2</m:mn><m:mfenced separators="" open="(" close=")"><m:mrow><m:mn>2</m:mn><m:mi>j</m:mi><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mi>j</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mi>k</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mi>ℓ</m:mi></m:mrow></m:mfenced><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/></m:mtr></m:mtable></m:math></mathml></equation-block><p>Notice how we used both our hypothesis and the negation of the conclusion
in the second line. Now divide the integer on each end of this string
of equalities by 2. On the left we get a remainder of 0, while on the
right we see that the remainder will be 1. Both remainders cannot be
correct, so this is our desired contradiction. Thus, the conclusion (that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>a</m:mi><m:mi>b</m:mi></m:math></mathml></d4p_eqn_inline> is
odd) is true.
</p><p>   Again, we do not offer this example as the <ph outputclass="cmti-12">best </ph>proof of this fact about even
and odd numbers, but rather it is a simple illustration of a proof by contradiction.
You can find examples of proofs by contradiction in <xref keyref="fcla-xml-2.30li18/theorem.RREFU">Theorem RREFU</xref>,
<xref keyref="fcla-xml-2.30li21/theorem.NMUS">Theorem NMUS</xref>, <xref keyref="fcla-xml-2.30li33/theorem.NPNT">Theorem NPNT</xref>, <xref keyref="fcla-xml-2.30li32/theorem.TTMI">Theorem TTMI</xref>, <xref keyref="fcla-xml-2.30li28/theorem.GSP">Theorem GSP</xref>,
<xref keyref="fcla-xml-2.30li42/theorem.ELIS">Theorem ELIS</xref>, <xref keyref="fcla-xml-2.30li42/theorem.EDYES">Theorem EDYES</xref>, <xref keyref="fcla-xml-2.30li47/theorem.EMHE">Theorem EMHE</xref>, <xref keyref="fcla-xml-2.30li48/theorem.EDELI">Theorem EDELI</xref>,
and <xref keyref="fcla-xml-2.30li49/theorem.DMFE">Theorem DMFE</xref>, in addition to several examples and solutions to
exercises.
                                                                          

                                                                          
</p></body></topic><topic id="d1e1211"><title>Proof Technique U: Uniqueness</title><body><p>  A theorem will sometimes claim that some object, having some desirable
property, is unique. In other words, there should be only one such object. To
prove this, a standard technique is to assume there are two such objects and
proceed to analyze the consequences. The end result may be a contradiction
(<xref href="#technique.CD">Technique CD</xref>), or the conclusion that the two allegedly different objects really
are equal.
</p></body></topic><topic id="d1e1227"><title>Proof Technique ME: Multiple Equivalences</title><body><p>    A very specialized form of a theorem begins with the statement “The
following are equivalent…,” which is then followed by a list of statements.
Informally, this lead-in sometimes gets abbreviated by “TFAE.” This
formulation means that any two of the statements on the list can be
connected with an “if and only if” to form a theorem. So if the list has
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline> statements
then, there are <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mfrac><m:mrow><m:mi>n</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>
possible equivalences that can be constructed (and are claimed to be
true).
</p><p>   Suppose a theorem of this form has statements denoted as
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>C</m:mi></m:math></mathml></d4p_eqn_inline>,…<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Z</m:mi></m:math></mathml></d4p_eqn_inline>.
To prove the entire theorem, we can prove
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>B</m:mi></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>B</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>C</m:mi></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>C</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>D</m:mi></m:math></mathml></d4p_eqn_inline>,…,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Y</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>Z</m:mi></m:math></mathml></d4p_eqn_inline> and finally,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>Z</m:mi><m:mo class="MathClass-rel">⇒</m:mo><m:mi>A</m:mi></m:math></mathml></d4p_eqn_inline>. This circular
chain of <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline>
equivalences would allow us, logically, if not practically, to form any one of the
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mfrac><m:mrow><m:mi>n</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>
possible equivalences by chasing the equivalences around the circle as far as
required.
                                                                          

                                                                          
</p></body></topic><topic id="d1e1366"><title>Proof Technique PI: Proving Identities</title><body><p>  Many theorems have conclusions that say two objects are equal. Perhaps one
object is hard to compute or understand, while the other is easy to compute or
understand. This would make for a pleasing theorem. Whether the result is
pleasing or not, we take the same approach to formulate a proof. Sometimes we
need to employ specialized notions of equality, such as <xref keyref="fcla-xml-2.30li70/definition.SE">Definition SE</xref>
or <xref keyref="fcla-xml-2.30li23/definition.CVE">Definition CVE</xref>, but in other cases we can string together a list of
equalities.
</p><p>   The wrong way to prove an identity is to begin by writing it down and then
beating on it until it reduces to an obvious identity. The first flaw is that you
would be writing down the statement you wish to prove, as if you already
believed it to be true. But more dangerous is the possibility that some of
your maneuvers are not reversible. Here’s an example. Let’s prove that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>3</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mo class="MathClass-bin">−</m:mo><m:mn>3</m:mn></m:math></mathml></d4p_eqn_inline>.
</p><equation-block><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block" overflow="scroll"><m:mtable columnalign="left" class="align-star"><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mn>3</m:mn></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mo class="MathClass-bin">−</m:mo><m:mn>3</m:mn><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> (This is a bad start)</m:mtext><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"><m:msup><m:mrow><m:mn>3</m:mn></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:msup><m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mo class="MathClass-bin">−</m:mo><m:mn>3</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> Square both sides</m:mtext><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mn>9</m:mn></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mn>9</m:mn><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mn>0</m:mn></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mn>0</m:mn><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> Subtract 9 from both sides</m:mtext><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr></m:mtable></m:math></mathml></equation-block><p>So because <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>0</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mn>0</m:mn></m:math></mathml></d4p_eqn_inline> is a true
statement, does it follow that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>3</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mo class="MathClass-bin">−</m:mo><m:mn>3</m:mn></m:math></mathml></d4p_eqn_inline>
is a true statement? Nope. Of course, we didn’t really expect a legitimate proof of
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>3</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mo class="MathClass-bin">−</m:mo><m:mn>3</m:mn></m:math></mathml></d4p_eqn_inline>, but
                                                                          

                                                                          
this attempt should illustrate the dangers of this (incorrect) approach.
</p><p>   What you have just seen in the proof of <xref keyref="fcla-xml-2.30li23/theorem.VSPCV">Theorem VSPCV</xref>, and what you will
see consistently throughout this text, is proofs of the following form. To prove
that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>A</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mi>D</m:mi></m:math></mathml></d4p_eqn_inline>
we write
</p><equation-block><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block" overflow="scroll"><m:mtable columnalign="left" class="align-star"><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mi>A</m:mi></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mi>B</m:mi><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> Theorem, Definition or Hypothesis justifying </m:mtext><m:mi>A</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mi>B</m:mi><m:mtext/><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mi>C</m:mi><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> Theorem, Definition or Hypothesis justifying </m:mtext><m:mi>B</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mi>C</m:mi><m:mtext/><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mi>D</m:mi><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> Theorem, Definition or Hypothesis justifying </m:mtext><m:mi>C</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mi>D</m:mi><m:mtext/><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr></m:mtable></m:math></mathml></equation-block><p>In your scratch work exploring possible approaches to proving a theorem you may
massage a variety of expressions, sometimes making connections to various bits
and pieces, while some parts get abandoned. Once you see a line of attack, rewrite
your proof carefully mimicking this style.
</p></body></topic><topic id="d1e1657"><title>Proof Technique DC: Decompositions</title><body><p>  Much of your mathematical upbringing, especially once you began a study of
algebra, revolved around simplifying expressions — combining like terms,
obtaining common denominators so as to add fractions, factoring in order to solve
polynomial equations. However, as often as not, we will do the opposite.
Many theorems and techniques will revolve around taking some object and
“decomposing” it into some combination of other objects, ostensibly in a more
complicated fashion. When we say something can “be written as” something else,
we mean that the one object can be decomposed into some combination of other
                                                                          

                                                                          
objects. This may seem unnatural at first, but results of this type will give us
insight into the structure of the original object by exposing its inner workings. An
appropriate analogy might be stripping the wallboards away from the interior
of a building to expose the structural members supporting the whole
building.
</p><p>   Perhaps you have studied integral calculus, or a pre-calculus course, where you
learned about partial fractions. This is a technique where a fraction of two
polynomials is <ph outputclass="cmti-12">decomposed </ph>(written as, expressed as) a sum of simpler fractions.
The purpose in calculus is to make finding an antiderivative simpler. For example,
you can verify the truth of the expression
</p><equation-block><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block" overflow="scroll"><m:mtable columnalign="left" class="align-star"><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mfrac><m:mrow><m:mn>1</m:mn><m:mn>2</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>5</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>4</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mn>2</m:mn><m:mn>0</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>3</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mn>6</m:mn><m:mn>6</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mn>2</m:mn><m:mn>9</m:mn><m:mn>4</m:mn><m:mi>x</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mn>0</m:mn><m:mn>8</m:mn></m:mrow><m:mrow><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>6</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>5</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mn>3</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>4</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mn>1</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>3</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mn>5</m:mn><m:mn>2</m:mn><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mn>0</m:mn><m:mi>x</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>4</m:mn><m:mn>8</m:mn></m:mrow></m:mfrac></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mn>5</m:mn><m:mi>x</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn></m:mrow><m:mrow><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mi>x</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>6</m:mn></m:mrow></m:mfrac><m:mo class="MathClass-bin">+</m:mo><m:mfrac><m:mrow><m:mn>3</m:mn><m:mi>x</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>7</m:mn></m:mrow><m:mrow><m:msup><m:mrow><m:mi>x</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow></m:mfrac><m:mo class="MathClass-bin">+</m:mo><m:mfrac><m:mrow><m:mn>3</m:mn></m:mrow><m:mrow><m:mi>x</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>4</m:mn></m:mrow></m:mfrac><m:mo class="MathClass-bin">+</m:mo><m:mfrac><m:mrow><m:mn>1</m:mn></m:mrow><m:mrow><m:mi>x</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>2</m:mn></m:mrow></m:mfrac><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr></m:mtable></m:math></mathml></equation-block><p>In an early course in algebra, you might be expected to combine the four terms on
the right over a common denominator to create the “simpler” expression on the
left. Going the other way, the partial fraction technique would allow you
to systematically <ph outputclass="cmti-12">decompose </ph>the fraction of polynomials on the left into
the sum of the four (arguably) simpler fractions of polynomials on the
right.
</p><p>   This is a major shift in thinking, so come back here often, especially when we
say “can be written as”, or “can be expressed as,” or “can be decomposed
as.”
</p></body></topic><topic id="d1e1914"><title>Proof Technique I: Induction</title><body><p>    “Induction” or “mathematical induction” is a framework for proving
statements that are indexed by integers. In other words, suppose you
have a statement to prove that is really multiple statements, one for
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>, another
for <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>2</m:mn></m:math></mathml></d4p_eqn_inline>, a
third for <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>3</m:mn></m:math></mathml></d4p_eqn_inline>,
and so on. If there is enough similarity between the statements, then you can use
a script (the framework) to prove them all at once.
</p><p>   For example, consider the theorem
</p><p>   <ph outputclass="cmbx-12">Theorem </ph><d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mo class="MathClass-rel">⋯</m:mo><m:mo class="MathClass-bin">+</m:mo><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mi>n</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>
for <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">≥</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>.
</p><p>   This is shorthand for the many statements
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mn>1</m:mn><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mn>2</m:mn><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mn>3</m:mn><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>3</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>4</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mn>4</m:mn><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>4</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>, and
so on. Forever. You can do the calculations in each of these statements and verify
that all four are true. We might not be surprised to learn that the fifth statement
is true as well (go ahead and check). However, do we think the theorem is true for
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>8</m:mn><m:mn>7</m:mn><m:mn>2</m:mn></m:math></mathml></d4p_eqn_inline>? Or
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>1</m:mn><m:mo class="MathClass-punc">,</m:mo><m:mn>2</m:mn><m:mn>3</m:mn><m:mn>4</m:mn><m:mo class="MathClass-punc">,</m:mo><m:mn>5</m:mn><m:mn>2</m:mn><m:mn>9</m:mn></m:math></mathml></d4p_eqn_inline>?
</p><p>   To see that these questions are not so ridiculous, consider the following
example from Rotman’s <ph outputclass="cmsl-12">Journey into Mathematics</ph>. The statement
“<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:msup><m:mrow><m:mi>n</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mi>n</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>4</m:mn><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline> is prime” is true for
integers <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-rel">≤</m:mo><m:mi>n</m:mi><m:mo class="MathClass-rel">≤</m:mo><m:mn>4</m:mn><m:mn>0</m:mn></m:math></mathml></d4p_eqn_inline> (check a few).
However, when we check <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>4</m:mn><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>
we find <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>4</m:mn><m:msup><m:mrow><m:mn>1</m:mn></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">−</m:mo><m:mn>4</m:mn><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>4</m:mn><m:mn>1</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mn>4</m:mn><m:msup><m:mrow><m:mn>1</m:mn></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup></m:math></mathml></d4p_eqn_inline>,
which is not prime.
</p><p>   So how do we prove infinitely many statements all at once? More formally, lets denote our
statements as <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>.
Then, if we can prove the two assertions
     </p><p>then it follows that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
is true for all <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">≥</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>.
To understand this, I liken the process to climbing an infinitely long ladder with
equally spaced rungs. Confronted with such a ladder, suppose I tell you that you
are able to step up onto the first rung, and if you are on any particular rung, then
you are capable of stepping up to the next rung. It follows that you can climb the
ladder as far up as you wish. The first formal assertion above is akin to
stepping onto the first rung, and the second formal assertion is akin to
assuming that if you are on any one rung then you can always reach the next
rung.
</p><p>   In practice, establishing that <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
is true is called the “base case” and in most cases is straightforward. Establishing that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-rel">⇒</m:mo><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline> is referred
to as the “induction step,” or in this book (and elsewhere) we will typically refer to the
assumption of <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
as the “induction hypothesis.” This is perhaps the most mysterious
part of a proof by induction, since it looks like you are assuming
(<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>) what you are
trying to prove (<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>).
Sometimes it is even worse, since as you get more comfortable
with induction, we often don’t bother to use a different letter
(<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>k</m:mi></m:math></mathml></d4p_eqn_inline>) for the
index (<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline>)
in the induction step. Notice that the second formal assertion never says that
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline> is true, it simply
says that <ph outputclass="cmti-12">if </ph><d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
were true, what might logically follow. We can establish statements like “If I lived
on the moon, then I could pole-vault over a bar 12 meters high.” This may be a
true statement, but it does not say we live on the moon, and indeed we may never
live there.
</p><p>   Enough generalities. Let’s work an example and prove the
theorem above about sums of integers. Formally, our statement is
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-punc">:</m:mo><m:mspace width="1em" class="nbsp"/><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mo class="MathClass-rel">⋯</m:mo><m:mo class="MathClass-bin">+</m:mo><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mi>n</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>n</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>.
                                                                          

                                                                          
</p><p>   <ph outputclass="cmbx-12">Proof</ph>: Base Case. <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
is the statement <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mn>1</m:mn><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac></m:math></mathml></d4p_eqn_inline>,
which we see simplifies to the true statement
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mn>1</m:mn><m:mo class="MathClass-rel">=</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>.
</p><p>   Induction Step: We will assume <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>
is true, and will try to prove <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>.
Given what we want to accomplish, it is natural to begin by examining the sum of
the first <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:math></mathml></d4p_eqn_inline>
integers.
</p><equation-block><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="block" overflow="scroll"><m:mtable columnalign="left" class="align-star"><m:mtr><m:mtd columnalign="right" class="align-odd"><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mo class="MathClass-rel">⋯</m:mo><m:mo class="MathClass-bin">+</m:mo><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mtd><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfenced separators="" open="(" close=")"><m:mrow><m:mn>1</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mo class="MathClass-bin">+</m:mo><m:mo class="MathClass-rel">⋯</m:mo><m:mo class="MathClass-bin">+</m:mo><m:mi>k</m:mi></m:mrow></m:mfenced><m:mo class="MathClass-bin">+</m:mo><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mi>k</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac><m:mo class="MathClass-bin">+</m:mo><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mtext> Induction Hypothesis</m:mtext><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:msup><m:mrow><m:mi>k</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mi>k</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac><m:mo class="MathClass-bin">+</m:mo><m:mfrac><m:mrow><m:mn>2</m:mn><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:msup><m:mrow><m:mi>k</m:mi></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:msup><m:mo class="MathClass-bin">+</m:mo><m:mn>3</m:mn><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>2</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr><m:mtr><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mo class="MathClass-rel">=</m:mo><m:mfrac><m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:mrow><m:mrow><m:mn>2</m:mn></m:mrow></m:mfrac><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-odd"/><m:mtd class="align-even"><m:mspace width="2em"/></m:mtd><m:mtd columnalign="right" class="align-label"/><m:mtd class="align-label"><m:mspace width="2em"/></m:mtd></m:mtr></m:mtable></m:math></mathml></equation-block><p>We then recognize the two ends of this chain of equalities as
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>.
So, by mathematical induction, the theorem is true for all
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline>.
                                                                          

                                                                          
</p><p>   How do you recognize when to use induction? The first clue is a statement
that is really many statements, one for each integer. The second clue would be
that you begin a more standard proof and you find yourself using words like
“and so on” (as above!) or lots of ellipses (dots) to establish patterns
that you are convinced continue on and on forever. However, there are
many minor instances where induction might be warranted but we don’t
bother.
</p><p>   Induction is important enough, and used often enough, that it
appears in various variations. The base case sometimes begins with
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi><m:mo class="MathClass-rel">=</m:mo><m:mn>0</m:mn></m:math></mathml></d4p_eqn_inline>, or perhaps an integer greater
than <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>n</m:mi></m:math></mathml></d4p_eqn_inline>. Some formulate
the induction step as <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">−</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow><m:mo class="MathClass-rel">⇒</m:mo><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>.
There is also a “strong form” of induction where we assume all of
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>2</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>,
<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mn>3</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>,
…<d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline> as a hypothesis for
showing the conclusion <d4p_eqn_inline><mathml><m:math xmlns:m="http://www.w3.org/1998/Math/MathML" display="inline" overflow="scroll"><m:mi>P</m:mi><m:mrow><m:mo class="MathClass-open">(</m:mo><m:mrow><m:mi>k</m:mi><m:mo class="MathClass-bin">+</m:mo><m:mn>1</m:mn></m:mrow><m:mo class="MathClass-close">)</m:mo></m:mrow></m:math></mathml></d4p_eqn_inline>.<br/>You can find examples of induction in the proofs of <xref keyref="fcla-xml-2.30li28/theorem.GSP">Theorem GSP</xref>, <xref keyref="fcla-xml-2.30li44/theorem.DER">Theorem DER</xref>,
<xref keyref="fcla-xml-2.30li44/theorem.DT">Theorem DT</xref>, <xref keyref="fcla-xml-2.30li45/theorem.DIM">Theorem DIM</xref>, <xref keyref="fcla-xml-2.30li48/theorem.EOMP">Theorem EOMP</xref>, <xref keyref="fcla-xml-2.30li48/theorem.DCP">Theorem DCP</xref>, and
<xref keyref="fcla-xml-2.30li60/theorem.KPLT">Theorem KPLT</xref>.
</p></body></topic><topic id="d1e3110"><title>Proof Technique P: Practice</title><body><p>  Here is a technique used by many practicing mathematicians when they are
teaching themselves new mathematics. As they read a textbook, monograph or
research article, they attempt to prove each new theorem themselves, <ph outputclass="cmti-12">before</ph>
reading the proof. Often the proofs can be very difficult, so it is wise not to spend
too much time on each. Maybe limit your losses and try each proof for 10 or 15
minutes. Even if the proof is not found, it is time well-spent. You become more
familiar with the definitions involved, and the hypothesis and conclusion
of the theorem. When you do work through the proof, it might make
more sense, and you will gain added insight about just how to construct a
proof.
                                                                          

                                                                          
</p></body></topic><topic id="d1e3130"><title>Proof Technique LC: Lemmas and Corollaries</title><body><p>    Theorems often go by different titles. Two of the most popular being
“lemma” and “corollary.” Before we describe the fine distinctions, be
aware that lemmas, corollaries, propositions, claims and facts are all just
theorems. And every theorem can be rephrased as an “if-then” statement,
or perhaps a pair of “if-then” statements expressed as an equivalence
(<xref href="#technique.E">Technique E</xref>).
</p><p>   A lemma is a theorem that is not too interesting in its own right, but is
important for proving other theorems. It might be a generalization or abstraction
of a key step of several different proofs. For this reason you often hear the phrase
“technical lemma” though some might argue that the adjective “technical” is
redundant.
</p><p>   A corollary is a theorem that follows very easily from another theorem. For
this reason, corollaries frequently do not have proofs. You are expected to easily
and quickly see how a previous theorem implies the corollary.
</p><p>   A proposition or fact is really just a codeword for a theorem. A claim might be
similar, but some authors like to use claims within a proof to organize key
steps. In a similar manner, some long proofs are organized as a series of
lemmas.
</p><p>   In order to not confuse the novice, we have just called all our theorems
theorems. It is also an organizational convenience. With only theorems and
definitions, the theoretical backbone of the course is laid bare in the two lists of
<xref href="#definition">Definitions</xref> and <xref href="#theorem">Theorems</xref>.
                                                                          

                                                                          
    <br/>
                                                                          

                                                                          
</p></body></topic></topic>